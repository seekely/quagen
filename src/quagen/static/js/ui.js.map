{"version":3,"file":"ui.js","sources":["../../../../node_modules/svelte/internal/index.mjs","../../ui/game.js","../../ui/game/Spot.svelte","../../ui/utils.js","../../ui/game/Board.svelte","../../ui/game/Score.svelte","../../ui/game/Scores.svelte","../../ui/game/StartPrompt.svelte","../../ui/game/App.svelte","../../ui/menu.js","../../ui/menu/App.svelte"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","\"use strict\";\n\n/**\n * Non component specific game UI controllers\n */\n\n/**\n * Holds on to and answers basic questions about the game state data received\n * from the backend API. We try to treat this object as immutable so to not\n * introduce any state discrepancy between client and server.\n *\n * @property {String} gameId          Game tracked by this object\n * @property {Bool}   init            If the game state has received inital data\n *                                    from backend API\n * @property {Bool}   completed       If the game has ended\n * @property {Array}  moveHistory     Every move made by all players. Looks like:\n *                                    [[(color0, x, y), (color1, x, y)]]\n * @property {Array}  moveLast        Last moves made by all players. Looks like:\n *                                    [(color0, x, y), (color1, x, y)]\n * @property {Object} players         All the players in the game. Looks like:\n *                                    {\"id1\": {\"id\": \"id1\", \"ai\": false, \"color\": 0}}\n * @property {Array}  scores          Scores for each player. Looks like:\n *                                    [{\"controlled\": 0, \"pressuring\": 0, \"projected\": 0}]\n * @property {Object} settings        Dictionary of key value pairs for the game settings\n * @property {Array}  spotsCurrent    [x][y] arrays containing data for each spot on the board.\n *                                    Each spot looks like {\"color\": 0, \"power\": 3, \"pressures\":[]}\n * @property {Array}  spotsProjected  [x][y] arrays containing projected data for each spot on the board.\n * @property {Int}    turnCompleted   Number of turns completed in the game.\n * @property {Int}    timeCompleted   Epoch time when game ended.\n * @property {Int}    timeCreated     Epoch time when game was created.\n * @property {Int}    timeStarted     Epoch time when game started.\n * @property {Int}    timeUpdated     Epoch time when game last updated/changed state.\n */\nexport class GameState {\n  /**\n   * Constructor\n   * @param  {String} gameId Game tracked by this object\n   */\n  constructor(gameId) {\n    this.gameId = gameId;\n    this.init = false;\n    this.completed = false;\n    this.moveHistory = [];\n    this.moveLast = [];\n    this.players = {};\n    this.scores = [];\n    this.settings = {};\n    this.spotsCurrent = [];\n    this.spotsProjected = [];\n    this.turnCompleted = 0;\n    this.timeCompleted = null;\n    this.timeCreated = 0;\n    this.timeStarted = null;\n    this.timeUpdated = 0;\n  }\n\n  /**\n   * Update the game state with the new state received from the backend API.\n   * @param  {Object} state New game state\n   */\n  update(state) {\n    this.completed = \"completed\" in state ? state[\"completed\"] : this.completed;\n    this.players = \"players\" in state ? state[\"players\"] : this.players;\n    this.scores = \"scores\" in state ? state[\"scores\"] : this.scores;\n    this.settings = \"settings\" in state ? state[\"settings\"] : this.settings;\n    this.spotsCurrent = \"board\" in state ? state[\"board\"] : this.spotsCurrent;\n    this.spotsProjected =\n      \"projected\" in state ? state[\"projected\"] : this.spotsProjected;\n    this.turnCompleted =\n      \"turn_completed\" in state ? state[\"turn_completed\"] : this.turnCompleted;\n    this.timeCompleted =\n      \"time_completed\" in state ? state[\"time_completed\"] : this.timeCompleted;\n    this.timeCreated =\n      \"time_created\" in state ? state[\"time_created\"] : this.timeCreated;\n    this.timeStarted =\n      \"time_started\" in state ? state[\"time_started\"] : this.timeStarted;\n    this.timeUpdated =\n      \"time_updated\" in state ? state[\"time_updated\"] : this.timeUpdated;\n\n    // From the list of all moves, extract out the latest moves made by each\n    // player\n    this.moveHistory = \"history\" in state ? state[\"history\"] : this.moveHistory;\n    if (0 < this.moveHistory.length) {\n      this.moveLast = this.moveHistory.slice(-1)[0];\n    }\n\n    // Mark this object as ready to be consumed by the UI\n    this.init = true;\n  }\n\n  /**\n   * Retrieves a game setting\n   * @param  {String} key Setting key\n   * @return (mixed) Setting value\n   * @throws {Exception} If setting does not exist\n   */\n  getSetting(key) {\n    if (!(key in this.settings)) {\n      throw `Setting '${key}'' does not exist`;\n    }\n\n    return this.settings[key];\n  }\n\n  /**\n   * If there is more than one human player in the game\n   * @return {Bool} True when at least one opponent is human\n   */\n  isVsHuman() {\n    const aiCount = this.getSetting(\"ai_count\");\n    const playerCount = this.getSetting(\"player_count\");\n    const humanCount = playerCount - aiCount;\n    return humanCount > 1;\n  }\n\n  /**\n   * If there is an AI in the game\n   * @return {Bool} True when at least one opponent is AI\n   */\n  isVsAI() {\n    const aiCount = this.getSetting(\"ai_count\");\n    return aiCount > 0;\n  }\n}\n\n/**\n * A short poll to grab the latest game state from the backend API and\n * repopulate a GameState object.\n */\nexport class GamePoll {\n  /**\n   * Constructor\n   * @param  {GameState} gameState instance to update\n   * @param  {Function} optional callback called after update to gameState\n   */\n  constructor(gameState, callback = null) {\n    this._gameState = gameState;\n    this._callback = callback;\n    this._inFlight = false;\n    this._timeBetweenPoll = 1000;\n    this._interval = null;\n  }\n\n  /**\n   * Starts the continuous short poll to the backend API\n   */\n  async start() {\n    const self = this;\n\n    if (self._interval == null) {\n      self._interval = setInterval(() => {\n        self._poll();\n      }, self._timeBetweenPoll);\n\n      return self._poll();\n    }\n  }\n\n  /**\n   * Stops the short poll\n   */\n  stop() {\n    if (null != this._interval) {\n      clearInterval(this._interval);\n      this._interval = null;\n    }\n  }\n\n  /**\n   * Makes the backend call to the API for the latest game state and updates\n   * the GameState object.\n   */\n  async _poll() {\n    // do not fire off a new request while we still have one in motion\n    if (this._inFlight) {\n      return;\n    }\n\n    this._inFlight = true;\n    const self = this;\n\n    // Tells the API to only return the full game state if the game state\n    // has changed since our last update.\n    const timeUpdated = self._gameState.timeUpdated;\n    const queryString = `?updatedAfter=${timeUpdated}`;\n\n    return fetch(`/api/v1/game/${self._gameState.gameId}${queryString}`)\n      .then(response => {\n        self._inFlight = false;\n        if (200 == response.status) {\n          return response.json();\n        } else {\n          throw response.statusText;\n        }\n      })\n      .then(data => {\n        // If the game state has new info, update and make the user\n        // callback\n        if (timeUpdated < data[\"game\"][\"time_updated\"]) {\n          self._gameState.update(data[\"game\"]);\n\n          if (null != this._callback) {\n            this._callback();\n          }\n        }\n      })\n      .catch(() => {\n        self._inFlight = false;\n      });\n  }\n}\n","<script>\n  /**\n   * A single spot on the game board\n   */\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  // Possible background colors for a spot based on state\n  const BG_COLOR_DEFAULT = [231, 231, 231];\n  const BG_COLOR_SELECTED = [240, 255, 0];\n  const BG_COLORS_PLAYER = [\n    [0, 0, 0],\n    [0, 140, 186],\n    [244, 67, 54],\n    [22, 215, 79],\n    [255, 195, 0]\n  ];\n\n  // Coordinates of this spot on the board\n  export let x;\n  export let y;\n\n  // Current color controlling this spot, -1 for none\n  export let color = -1;\n\n  // Pressures on this spot from each color\n  export let pressures = [];\n\n  // Current power level of this spot\n  export let power = 0;\n\n  // @hack rseekely should not be hard coded\n  // Max possible power level\n  export let maxPower = 4;\n\n  // If the player selected this spot before moving here\n  export let selected = false;\n\n  // If a move is allowed to made on this spot\n  export let allowMove = true;\n\n  // If this spot is the current move being made by the player\n  export let pendingMove = false;\n\n  // If this spot was the last move made by any player\n  export let lastMove = false;\n\n  // The background color of the button based on current state\n  let buttonColor = BG_COLOR_DEFAULT;\n  let buttonOpacity = 1;\n  $: {\n    if (selected || pendingMove) {\n      buttonColor = BG_COLOR_SELECTED;\n      buttonOpacity = 1;\n    } else if (0 <= color) {\n      buttonColor = BG_COLORS_PLAYER[color];\n      buttonOpacity =\n        0 < power && power < maxPower ? (0.75 / maxPower) * power : 1;\n    } else {\n      buttonColor = BG_COLOR_DEFAULT;\n      buttonOpacity = 1;\n    }\n  }\n\n  // If the button should be enabled at all based on current state\n  $: buttonEnabled = allowMove && power < maxPower;\n\n  /**\n   * Dispatches an event to the parent when this spot was selected by the\n   * player. Depending on the settings, we may want to wait for a double\n   * click before making this a move.\n   */\n  function handleSelected() {\n    dispatch(\"selected\", { x: x, y: y });\n  }\n\n  /**\n   * Creates a CSS rgba() string\n   * @param  {list} color expressed as [r,g,b]\n   * @param  {float} opactiy expressed as float from 0 - 1\n   * @return {string} rgba(r,g,b,opacity)\n   */\n  function toRGBA(color, opacity) {\n    return `rgba(${color[0]}, ${color[1]}, ${color[2]}, ${opacity})`;\n  }\n</script>\n\n<style>\n  button,\n  button:disabled,\n  button[disabled] {\n    margin: 1px;\n    padding: 0px;\n    height: 25px;\n    width: 25px;\n\n    color: white;\n    font: inherit;\n    font-weight: bold;\n    font-size: 12px;\n    text-align: center;\n\n    border: 1px solid black;\n    outline: none;\n  }\n\n  button:active {\n    box-shadow: inset 2px 2px 6px #c1c1c1;\n  }\n\n  /* Spot pulses when hovered or touched */\n  @keyframes pulse {\n    25% {\n      transform: scale(1.1);\n    }\n    75% {\n      transform: scale(0.9);\n    }\n  }\n\n  .selected,\n  .pulse:hover {\n    animation-name: pulse;\n    animation-duration: 1s;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n  }\n\n  /* Outline a spot to indicate a move */\n  .outline,\n  .pulse:hover {\n    z-index: 2;\n    border: 1px solid rgba(0, 0, 0, 0) !important;\n    outline: 3px solid black !important;\n  }\n</style>\n\n<button\n  type=\"button\"\n  on:mouseup={handleSelected}\n  class:outline={lastMove || pendingMove || selected}\n  class:pulse={!pendingMove && !lastMove && buttonEnabled}\n  class:selected={selected && !pendingMove && !lastMove && buttonEnabled}\n  style=\"background-color: {toRGBA(buttonColor, buttonOpacity)};\"\n  disabled={!buttonEnabled} />\n","\"use strict\";\n\n/**\n * Utility functions used across the UI\n */\n\n/**\n * Sets up listeners to detect browser capabilities\n */\nexport function detectCapabilities() {\n  // Detect if the user is interacting with the screen via touching\n  window.addEventListener(\n    \"touchstart\",\n    function onFirstTouch() {\n      window.CAPABILITY_TOUCH = true;\n\n      // Only need to detect human touch one time\n      window.removeEventListener(\"touchstart\", onFirstTouch, false);\n    },\n    false\n  );\n}\n\n/**\n * If the user has interacted with the screen via touch\n * @returns {Bool} True if user has interacted via touch, false otherwise\n */\nexport function isTouching() {\n  return true == window.CAPABILITY_TOUCH;\n}\n","<script>\n  /**\n   * Game board UI.\n   */\n\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  import Spot from \"./Spot.svelte\";\n  import { isTouching } from \"../utils.js\";\n\n  // The turn number completed this board state reflects\n  export let turnCompleted = 0;\n\n  // Number of spots on the board\n  export let width = 0;\n  export let height = 0;\n\n  // Data for each spot on the board in the format of\n  // [[{\"x\": 0, \"y\": 0}, {\"x\": 0, \"y\": 1}], [{\"x\": 1, \"y\": 0}, {\"x\": 1, \"y\": 1}]]\n  export let spots = [];\n\n  // If the game/board state allows the player to make a move\n  export let allowMove = true;\n\n  // All the past moves made in the game in the format of\n  // [[(color0, x, y), (color1, x, y)]]\n  export let moveHistory = [];\n\n  // This player's selected spot on the board, or -1 if none\n  $: selectedX = turnCompleted ? -1 : -1;\n  $: selectedY = turnCompleted ? -1 : -1;\n\n  // if we sent off a move from this player to the backend API\n  $: pendingMove = turnCompleted ? false : false;\n\n  // the last set of moves made by each player in the format of\n  // [(color0, x, y), (color1, x, y)]\n  $: lastMoves = moveHistory.length > 0 ? moveHistory.slice(-1)[0] : [];\n\n  // Change the viewport of a mobile device so the whole board is visible\n  // on page load\n  $: containerWidth = width * 26 + 75;\n  $: {\n    const viewport = document.getElementById(\"viewport\");\n    if (0 < width && containerWidth > screen.width) {\n      viewport.setAttribute(\"content\", `width=${containerWidth}`);\n    }\n  }\n\n  /**\n   * Handles when  a spot on the board has been selected by the player.\n   * Depending on the settings, we may want to wait for a double\n   * click before making this a move.\n   */\n  export function handleSpotSelected(event) {\n    const eventX = event.detail.x;\n    const eventY = event.detail.y;\n\n    // Short circuit getting here when a move should not be allowed according\n    // to board/game state\n    if (!allowMove) {\n      return;\n    }\n\n    // if the player is using a mouse, let the first selection made\n    // go through. if the player is using a touch screen, make them confirm\n    // their selection with another click so they don't accidentally make a move\n    // while scrolling/zooming.\n    if (!isTouching() || (selectedX == eventX && selectedY == eventY)) {\n      pendingMove = true;\n      allowMove = false;\n      selectedX = eventX;\n      selectedY = eventY;\n      dispatch(\"move\", { x: eventX, y: eventY });\n    } else {\n      selectedX = eventX;\n      selectedY = eventY;\n    }\n  }\n\n  /**\n   * If a player moved in the spot last turn\n   * @param  {list} moves List of last turn's moves in format of [(x1,y1), (x2,y2)]\n   * @param  {int} x coord of spot to check\n   * @param  {int} y coord of spot to check\n   * @return {bool} true if player moved in x,y location last turned, false otherwise\n   */\n  export function isLastMove(moves, x, y) {\n    for (let move of moves) {\n      if (x == move[0] && y == move[1]) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n</script>\n\n<style>\n  div.container {\n    line-height: 1px;\n  }\n</style>\n\n<div class=\"container\" style=\"min-width: {containerWidth}px;\">\n  <!-- {# Iterate through each spot on the board and create a Spot component #} -->\n  {#each { length: height } as _, y}\n    {#each { length: width } as _, x}\n      <Spot\n        {x}\n        {y}\n        {allowMove}\n        {...spots[x][y]}\n        selected={selectedX == x && selectedY == y}\n        lastMove={isLastMove(lastMoves, x, y)}\n        pendingMove={selectedX == x && selectedY == y && pendingMove}\n        on:selected={handleSpotSelected} />\n    {/each}\n    <br />\n  {/each}\n</div>\n","<script>\n  /**\n   * Displays the score for a single player\n   */\n\n  // This scoreboard entry is serving as the key and not a player score\n  export let key = false;\n\n  // The player color owning this score\n  export let color = 0;\n\n  // If the game has ended\n  export let gameOver = false;\n\n  // If this player is the outright winner of the game\n  export let winner = false;\n\n  // We give the winner of the game a crown\n  $: crown = gameOver && winner;\n\n  // The player's current scores\n  export let controlled = 0;\n  export let pressuring = 0;\n  export let projected = 0;\n</script>\n\n<style>\n  div.container {\n    display: inline-block;\n  }\n\n  div.crown {\n    padding: 0em 0em 0.2em 1.3em;\n  }\n\n  div.inner {\n    padding: 0.5em 1em 0.5em 1em;\n    border: 1px dashed black;\n    text-align: center;\n  }\n\n  div.key {\n    width: 8em;\n    border-radius: 4px;\n    color: black;\n    font-weight: bolder;\n  }\n\n  div.player {\n    width: 4em;\n    border-radius: 4px;\n    margin-left: 0.5em;\n    color: black;\n    font-weight: bold;\n  }\n\n  .bg-color-0 {\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n  .bg-color-1 {\n    background-color: rgba(0, 140, 186, 0.35);\n  }\n  .bg-color-2 {\n    background-color: rgba(244, 67, 54, 0.35);\n  }\n  .bg-color-3 {\n    background-color: rgba(22, 215, 79, 0.35);\n  }\n  .bg-color-4 {\n    background-color: rgba(255, 195, 0, 0.35);\n  }\n\n  /* Div pulses when winner is declared */\n  @keyframes crown {\n    25% {\n      transform: scale(1.05);\n    }\n    75% {\n      transform: scale(1);\n    }\n  }\n\n  .crown {\n    animation-name: crown;\n    animation-duration: 2s;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n  }\n</style>\n\n<div class=\"container\">\n\n  {#if crown}\n    <div class=\"crown\">\n      <img src=\"/img/crown.png\" width=\"35px\" alt=\"Crown!\" />\n    </div>\n  {/if}\n\n  <div class=\"inner bg-color-{color}\" class:crown class:key class:player={!key}>\n    {#if key}\n      <div>Controlled</div>\n      <div>Projected</div>\n      <div>Pressuring</div>\n    {:else}\n      <div>{controlled}</div>\n      <div>{projected}</div>\n      <div>{pressuring}</div>\n    {/if}\n  </div>\n</div>\n","<script>\n  /**\n   * Scoreboard for the current game\n   */\n\n  import Score from \"./Score.svelte\";\n\n  // If the game is over\n  export let gameOver = false;\n\n  // List of scores for each player in the format of:\n  // [{\"controlled\": 15, \"pressuring\": 24}]\n  export let scores = [];\n\n  // List of leaders of the game in the format of:\n  // [(color, score)]\n  export let leaders = [];\n\n  // When the game has ended with a tie score\n  $: tied = gameOver && leaders.length > 0;\n\n  /**\n   * If the player color is the outright winner of the match\n   * @param  {int} color Player color\n   * @param  {dict} score Player's score dictionary\n   * @return {Boolean} True if the player is outright winner\n   */\n  function isWinner(color, scores) {\n    let winner = true;\n    const score = scores[color][\"controlled\"];\n\n    for (let i = 0; i < scores.length; i++) {\n      if (i != color && scores[i][\"controlled\"] >= score) {\n        winner = false;\n        break;\n      }\n    }\n\n    return winner;\n  }\n</script>\n\n<style>\n  p {\n    padding: 8px;\n  }\n\n  div.container {\n    white-space: nowrap;\n  }\n\n  div.gameover {\n    width: 535px;\n    border-radius: 5px;\n    color: white;\n    background-color: rgba(255, 0, 0, 0.6);\n    font-weight: bold;\n  }\n</style>\n\n<div>\n\n  {#if gameOver}\n    <div class=\"gameover\">\n      {#if tied}\n        <p>This game has ended in a tie!</p>\n      {:else}\n        <p>This game has ended!</p>\n      {/if}\n    </div>\n  {/if}\n\n  <div class=\"container\">\n    <Score key={true} />\n    {#each scores as score, i}\n      <Score color={i} {gameOver} winner={isWinner(i, scores)} {...score} />\n    {/each}\n  </div>\n</div>\n","<script>\n  /**\n   * Information prompt at the start of the game\n   */\n\n  // Unique id of the game\n  export let gameId = 0;\n\n  // If the game has at least one other human player\n  export let vsHumans = false;\n\n  // Url to share this game with others\n  $: shareUrl = `${window.location.protocol}//${window.location.host}/game/${gameId}`;\n\n  /**\n   * Highlight and copy to clipboard the share url on click\n   */\n  function handleShare() {\n    // highlight share url\n    const shareElm = document.getElementById(\"share-url\");\n\n    const range = document.createRange();\n    range.selectNodeContents(shareElm);\n\n    const selection = window.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(range);\n\n    // copy share url to clipboard\n    document.execCommand(\"copy\");\n  }\n</script>\n\n<style>\n  div {\n    width: 535px;\n    border-radius: 5px;\n    color: white;\n    background-color: rgba(255, 0, 0, 0.6);\n    font-weight: bold;\n  }\n\n  p {\n    padding: 8px;\n    margin-bottom: 0px;\n  }\n\n  p.share {\n    margin-top: 2px;\n    color: yellow;\n  }\n\n  p.share span {\n    padding: 4px;\n    border-radius: 5px;\n    border-color: black;\n    border-style: dashed;\n  }\n</style>\n\n<div>\n  {#if vsHumans}\n    <p>\n      The game will start after all players have made their first move. To\n      invite a friend to the game, share the following link:\n    </p>\n    <p class=\"share\" on:mouseup={handleShare}>\n      <span id=\"share-url\">{shareUrl}</span>\n    </p>\n  {:else}\n    <p>The game will start when you make your first move.</p>\n  {/if}\n</div>\n","<script>\n  /**\n   * Entry point for the game UI and lays out the top level UI components.\n   */\n\n  import { GameState, GamePoll } from \"../game.js\";\n  import Board from \"./Board.svelte\";\n  import Scores from \"./Scores.svelte\";\n  import Settings from \"./Settings.svelte\";\n  import StartPrompt from \"./StartPrompt.svelte\";\n\n  // Unique string id for this game\n  export let gameId = 0;\n\n  // Contains the current game data/state as retrieved from the backend API\n  let gameState = new GameState(gameId);\n\n  // If the game state has completed the initial population from the\n  // backend API -- don't want to show some elements until data exists.\n  $: init = gameState.init;\n\n  // If the game has ended and no more play is allowed. This propagates\n  // to various components so an end game state can be shown.\n  $: gameOver = gameState.completed;\n\n  // Number of turns completed/processed in this game.\n  $: turnCompleted = gameState.turnCompleted;\n\n  // If the player should be allowed to make a move on the board\n  $: allowMove = !gameOver && gameState.timeStarted > 0;\n\n  // The data representation for every spot on the board -- the player can\n  // toggle different views (e.g. looking at the projected board).\n  $: spots = gameState.spotsCurrent;\n\n  // Fires off a repeated call to the backend API to grab the latest game\n  // state. Yes, this should be sockets instead of short polling.\n  const gamePoll = new GamePoll(gameState, () => {\n    // Lets Svelte know the game state has changed so it can re-evaulate\n    // all related data bindings.\n    gameState = gameState;\n  });\n  gamePoll.start();\n\n  /**\n   * Fires off a player move request to the backend API initiated from\n   * a player interacting with the board.\n   * @param  {Event} event Custom event dispatched from the game board\n   */\n  function handleMove(event) {\n    const spotX = event.detail.x;\n    const spotY = event.detail.y;\n    allowMove = false;\n    fetch(`/api/v1/game/${gameId}/move/${spotX}/${spotY}`);\n  }\n\n  /**\n   * Toggled the player's view of the board between the current game board\n   * and the projected board state.\n   * @param  {Event} event DOM event\n   */\n  function handleProjected(event) {\n    if (event.target.checked) {\n      allowMove = false;\n      spots = gameState.spotsProjected;\n    } else {\n      allowMove = true;\n      spots = gameState.spotsCurrent;\n    }\n  }\n</script>\n\n{#if init}\n\n  <!-- {# Prompt the players with instructions at start of game #} -->\n  {#if turnCompleted == 0}\n    <StartPrompt gameId={gameState.gameId} vsHumans={gameState.isVsHuman()} />\n    <!-- {# Otherwise, show the score of the game once a turn has finished #} -->\n  {:else}\n    <Scores {gameOver} scores={gameState.scores} />\n  {/if}\n\n  <Settings on:change={handleProjected} />\n\n  <Board\n    height={gameState.getSetting('dimension_x')}\n    width={gameState.getSetting('dimension_y')}\n    moveHistory={gameState.moveHistory}\n    {allowMove}\n    {spots}\n    {turnCompleted}\n    on:move={handleMove} />\n{:else}\n\n  <p>Loading...</p>\n{/if}\n","\"use strict\";\n\n/**\n * Controller functions for the game's main menu on the home page\n */\n\n/**\n * Sends a create game request to the backend API. Redirects the browser to\n * the new game on success.\n * @param  {Int} playerCount Number of total players to be in the game\n * @param  {Int} aiCount Number of AI players to be in the game\n * @param  {Int} aiStrength Strength of the AI. Higher is more difficult.\n */\nexport async function createGame(playerCount, aiCount, aiStrength) {\n  // Build the request options\n  const options = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      player_count: playerCount,\n      ai_count: aiCount,\n      ai_strength: aiStrength\n    })\n  };\n\n  // Fire the new game request\n  return fetch(`/api/v1/game/new`, options)\n    .then(response => {\n      if (200 == response.status) {\n        return response.json();\n      } else {\n        throw response.statusText;\n      }\n    })\n    .then(data => {\n      // On successful creation of new game, redirect the browser to the game.\n      const gameId = data[\"game\"][\"game_id\"];\n      window.location.assign(`/game/${gameId}`);\n    })\n    .catch(() => {\n      return;\n    });\n}\n","<script>\n  /**\n   * Entry point for the main menu UI on the home screen.\n   */\n\n  import { createGame } from \"../menu.js\";\n\n  // Possible game difficulties for an AI opponent\n  const difficulties = [[\"Easy\", 0], [\"Medium\", 1], [\"Hard\", 2]];\n\n  // Number of total players in the game\n  let playerCount = 2;\n\n  // Number of AI players in the game\n  let aiCount = 0;\n\n  // Higher AI strength means higher difficulty\n  let aiStrength = 0;\n\n  /**\n   * Creates a game with a single AI opponent\n   */\n  function playAi() {\n    aiCount = 1;\n    createGame(playerCount, aiCount, aiStrength);\n  }\n\n  /**\n   * Creates a game with a single human opponent\n   */\n  function playFriend() {\n    createGame(playerCount, aiCount, aiStrength);\n  }\n\n  /**\n   * Changes the AI difficulty based on player button toggle\n   * @param  {Event} event DOM event from difficulty buttons\n   */\n  function changeDifficulty(event) {\n    aiStrength = event.target.getAttribute(\"difficulty\");\n  }\n</script>\n\n<style>\n  .container {\n    display: inline-flex;\n    flex-wrap: wrap;\n  }\n\n  .block {\n    margin-right: 1em;\n  }\n\n  .option-ai {\n    margin-top: 5%;\n  }\n\n  .option-friend {\n    margin-top: 8%;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  .button-play {\n    border-radius: 4px;\n    color: white;\n    font-size: 300%;\n    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n  }\n\n  .button-ai {\n    background: rgb(223, 117, 20);\n  }\n\n  .button-friend {\n    background: rgb(28, 184, 65);\n  }\n\n  div.difficulty {\n    margin-top: 0.5em;\n  }\n\n  .button-difficulty {\n    color: white;\n    margin-right: 0.5em;\n    font-size: 125%;\n    text-shadow: 0 1px 1px rgba(0, 0, 0, 0.2);\n    background: rgb(223, 117, 20);\n  }\n\n  .button-difficulty-selected {\n    outline: 3px dashed black;\n    outline-offset: 3px;\n  }\n</style>\n\n<div class=\"container\">\n  <div class=\"block\">\n    <img src=\"/img/intro.gif\" alt=\"Demo gif\" />\n  </div>\n\n  <div class=\"block\">\n    <div class=\"option-ai\">\n\n      <!-- {# Start a game vs the AI #} -->\n      <div>\n        <button class=\"button-play button-ai\" on:mouseup={playAi}>\n          Play AI\n        </button>\n      </div>\n\n      <!-- {# Buttons to change the AI difficulty #} -->\n      <div class=\"difficulty\">\n        {#each difficulties as difficulty}\n          <button\n            class=\"button-difficulty\"\n            class:button-difficulty-selected={aiStrength == difficulty[1]}\n            difficulty={difficulty[1]}\n            on:mouseup={changeDifficulty}>\n            {difficulty[0]}\n          </button>\n        {/each}\n      </div>\n    </div>\n\n    <!-- {# Start a game vs a human #} -->\n    <div class=\"option-friend\">\n      <button class=\"button-play button-friend\" on:mouseup={playFriend}>\n        Play Friend\n      </button>\n    </div>\n\n  </div>\n</div>\n"],"names":[],"mappings":";;;IAAA,SAAS,IAAI,GAAG,GAAG;AACnB,IACA,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;IAC1B;IACA,IAAI,KAAK,MAAM,CAAC,IAAI,GAAG;IACvB,QAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACxB,IAAI,OAAO,GAAG,CAAC;IACf,CAAC;AACD,IAGA,SAAS,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzD,IAAI,OAAO,CAAC,aAAa,GAAG;IAC5B,QAAQ,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE;IACzC,KAAK,CAAC;IACN,CAAC;IACD,SAAS,GAAG,CAAC,EAAE,EAAE;IACjB,IAAI,OAAO,EAAE,EAAE,CAAC;IAChB,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IACD,SAAS,OAAO,CAAC,GAAG,EAAE;IACtB,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,WAAW,CAAC,KAAK,EAAE;IAC5B,IAAI,OAAO,OAAO,KAAK,KAAK,UAAU,CAAC;IACvC,CAAC;IACD,SAAS,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE;IAC9B,IAAI,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,KAAK,OAAO,CAAC,KAAK,UAAU,CAAC,CAAC;IAClG,CAAC;AACD,AA8IA;IACA,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE;IAC9B,IAAI,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IACD,SAAS,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IACtC,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,IAAI,IAAI,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,MAAM,CAAC,IAAI,EAAE;IACtB,IAAI,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACtC,CAAC;IACD,SAAS,YAAY,CAAC,UAAU,EAAE,SAAS,EAAE;IAC7C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IACnD,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC;IACzB,YAAY,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IACvC,KAAK;IACL,CAAC;IACD,SAAS,OAAO,CAAC,IAAI,EAAE;IACvB,IAAI,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;AACD,IAkBA,SAAS,IAAI,CAAC,IAAI,EAAE;IACpB,IAAI,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IACzC,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;IACrB,CAAC;IACD,SAAS,KAAK,GAAG;IACjB,IAAI,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IACD,SAAS,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE;IAC/C,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnD,IAAI,OAAO,MAAM,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IACnE,CAAC;AACD,IAqBA,SAAS,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IACtC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IACxC,SAAS,IAAI,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,KAAK;IACnD,QAAQ,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC5C,CAAC;AACD,IA0DA,SAAS,QAAQ,CAAC,OAAO,EAAE;IAC3B,IAAI,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC1C,CAAC;AACD,IAiDA,SAAS,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,SAAS,EAAE;IAChD,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,KAAK,EAAE,SAAS,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;IACrE,CAAC;AACD,IA4EA,SAAS,YAAY,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE;IAC7C,IAAI,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IACD,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;IACpC,IAAI,MAAM,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAClD,IAAI,CAAC,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IAClD,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AACD,AAoKA;IACA,IAAI,iBAAiB,CAAC;IACtB,SAAS,qBAAqB,CAAC,SAAS,EAAE;IAC1C,IAAI,iBAAiB,GAAG,SAAS,CAAC;IAClC,CAAC;IACD,SAAS,qBAAqB,GAAG;IACjC,IAAI,IAAI,CAAC,iBAAiB;IAC1B,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,gDAAgD,CAAC,CAAC,CAAC;IAC5E,IAAI,OAAO,iBAAiB,CAAC;IAC7B,CAAC;AACD,IAYA,SAAS,qBAAqB,GAAG;IACjC,IAAI,MAAM,SAAS,GAAG,qBAAqB,EAAE,CAAC;IAC9C,IAAI,OAAO,CAAC,IAAI,EAAE,MAAM,KAAK;IAC7B,QAAQ,MAAM,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IACvD,QAAQ,IAAI,SAAS,EAAE;IACvB;IACA;IACA,YAAY,MAAM,KAAK,GAAG,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACrD,YAAY,SAAS,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,EAAE,IAAI;IAC5C,gBAAgB,EAAE,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC1C,aAAa,CAAC,CAAC;IACf,SAAS;IACT,KAAK,CAAC;IACN,CAAC;AACD,IAMA;IACA;IACA;IACA,SAAS,MAAM,CAAC,SAAS,EAAE,KAAK,EAAE;IAClC,IAAI,MAAM,SAAS,GAAG,SAAS,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACzD,IAAI,IAAI,SAAS,EAAE;IACnB,QAAQ,SAAS,CAAC,KAAK,EAAE,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IACnD,KAAK;IACL,CAAC;;IAED,MAAM,gBAAgB,GAAG,EAAE,CAAC;AAC5B,IACA,MAAM,iBAAiB,GAAG,EAAE,CAAC;IAC7B,MAAM,gBAAgB,GAAG,EAAE,CAAC;IAC5B,MAAM,eAAe,GAAG,EAAE,CAAC;IAC3B,MAAM,gBAAgB,GAAG,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3C,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,SAAS,eAAe,GAAG;IAC3B,IAAI,IAAI,CAAC,gBAAgB,EAAE;IAC3B,QAAQ,gBAAgB,GAAG,IAAI,CAAC;IAChC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACrC,KAAK;IACL,CAAC;AACD,IAIA,SAAS,mBAAmB,CAAC,EAAE,EAAE;IACjC,IAAI,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC;AACD,IAGA,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,MAAM,cAAc,GAAG,IAAI,GAAG,EAAE,CAAC;IACjC,SAAS,KAAK,GAAG;IACjB,IAAI,IAAI,QAAQ;IAChB,QAAQ,OAAO;IACf,IAAI,QAAQ,GAAG,IAAI,CAAC;IACpB,IAAI,GAAG;IACP;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7D,YAAY,MAAM,SAAS,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAClD,YAAY,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC7C,YAAY,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;IACjC,SAAS;IACT,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,QAAQ,OAAO,iBAAiB,CAAC,MAAM;IACvC,YAAY,iBAAiB,CAAC,GAAG,EAAE,EAAE,CAAC;IACtC;IACA;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7D,YAAY,MAAM,QAAQ,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IACjD,YAAY,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;IAC/C;IACA,gBAAgB,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC7C,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS;IACT,QAAQ,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;IACpC,KAAK,QAAQ,gBAAgB,CAAC,MAAM,EAAE;IACtC,IAAI,OAAO,eAAe,CAAC,MAAM,EAAE;IACnC,QAAQ,eAAe,CAAC,GAAG,EAAE,EAAE,CAAC;IAChC,KAAK;IACL,IAAI,gBAAgB,GAAG,KAAK,CAAC;IAC7B,IAAI,QAAQ,GAAG,KAAK,CAAC;IACrB,IAAI,cAAc,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IACD,SAAS,MAAM,CAAC,EAAE,EAAE;IACpB,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;IACpB,QAAQ,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAClC,QAAQ,MAAM,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;IAC/B,QAAQ,EAAE,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACpD,QAAQ,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IACrD,KAAK;IACL,CAAC;AACD,IAcA,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,IAAI,MAAM,CAAC;IACX,SAAS,YAAY,GAAG;IACxB,IAAI,MAAM,GAAG;IACb,QAAQ,CAAC,EAAE,CAAC;IACZ,QAAQ,CAAC,EAAE,EAAE;IACb,QAAQ,CAAC,EAAE,MAAM;IACjB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,YAAY,GAAG;IACxB,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;IACnB,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,KAAK;IACL,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC;IACtB,CAAC;IACD,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE;IACrC,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE;IACxD,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE;IAC1B,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC;IAC/B,YAAY,OAAO;IACnB,QAAQ,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC5B,QAAQ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM;IAC5B,YAAY,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACnC,YAAY,IAAI,QAAQ,EAAE;IAC1B,gBAAgB,IAAI,MAAM;IAC1B,oBAAoB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/B,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,aAAa;IACb,SAAS,CAAC,CAAC;IACX,QAAQ,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvB,KAAK;IACL,CAAC;AACD,AA+YA;IACA,SAAS,iBAAiB,CAAC,MAAM,EAAE,OAAO,EAAE;IAC5C,IAAI,MAAM,MAAM,GAAG,EAAE,CAAC;IACtB,IAAI,MAAM,WAAW,GAAG,EAAE,CAAC;IAC3B,IAAI,MAAM,aAAa,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC;IACzC,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;IAC1B,IAAI,OAAO,CAAC,EAAE,EAAE;IAChB,QAAQ,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5B,QAAQ,MAAM,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7B,QAAQ,IAAI,CAAC,EAAE;IACf,YAAY,KAAK,MAAM,GAAG,IAAI,CAAC,EAAE;IACjC,gBAAgB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC;IAC/B,oBAAoB,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACzC,aAAa;IACb,YAAY,KAAK,MAAM,GAAG,IAAI,CAAC,EAAE;IACjC,gBAAgB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;IACzC,oBAAoB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;IACzC,oBAAoB,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3C,iBAAiB;IACjB,aAAa;IACb,YAAY,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1B,SAAS;IACT,aAAa;IACb,YAAY,KAAK,MAAM,GAAG,IAAI,CAAC,EAAE;IACjC,gBAAgB,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACvC,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,KAAK,MAAM,GAAG,IAAI,WAAW,EAAE;IACnC,QAAQ,IAAI,EAAE,GAAG,IAAI,MAAM,CAAC;IAC5B,YAAY,MAAM,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;IACpC,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC;IACD,SAAS,iBAAiB,CAAC,YAAY,EAAE;IACzC,IAAI,OAAO,OAAO,YAAY,KAAK,QAAQ,IAAI,YAAY,KAAK,IAAI,GAAG,YAAY,GAAG,EAAE,CAAC;IACzF,CAAC;AACD,IAgJA,SAAS,gBAAgB,CAAC,KAAK,EAAE;IACjC,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,EAAE,CAAC;IACvB,CAAC;AACD,IAGA,SAAS,eAAe,CAAC,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE;IACpD,IAAI,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IAC1E,IAAI,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC3C;IACA,IAAI,mBAAmB,CAAC,MAAM;IAC9B,QAAQ,MAAM,cAAc,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IACrE,QAAQ,IAAI,UAAU,EAAE;IACxB,YAAY,UAAU,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;IAC/C,SAAS;IACT,aAAa;IACb;IACA;IACA,YAAY,OAAO,CAAC,cAAc,CAAC,CAAC;IACpC,SAAS;IACT,QAAQ,SAAS,CAAC,EAAE,CAAC,QAAQ,GAAG,EAAE,CAAC;IACnC,KAAK,CAAC,CAAC;IACP,IAAI,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;IAC9C,CAAC;IACD,SAAS,iBAAiB,CAAC,SAAS,EAAE,SAAS,EAAE;IACjD,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,CAAC;IAC5B,IAAI,IAAI,EAAE,CAAC,QAAQ,KAAK,IAAI,EAAE;IAC9B,QAAQ,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;IAC/B,QAAQ,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAChD;IACA;IACA,QAAQ,EAAE,CAAC,UAAU,GAAG,EAAE,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC3C,QAAQ,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC;IACpB,KAAK;IACL,CAAC;IACD,SAAS,UAAU,CAAC,SAAS,EAAE,CAAC,EAAE;IAClC,IAAI,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;IACtC,QAAQ,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACzC,QAAQ,eAAe,EAAE,CAAC;IAC1B,QAAQ,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACnC,KAAK;IACL,IAAI,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IACD,SAAS,IAAI,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IAC7F,IAAI,MAAM,gBAAgB,GAAG,iBAAiB,CAAC;IAC/C,IAAI,qBAAqB,CAAC,SAAS,CAAC,CAAC;IACrC,IAAI,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;IAC5C,IAAI,MAAM,EAAE,GAAG,SAAS,CAAC,EAAE,GAAG;IAC9B,QAAQ,QAAQ,EAAE,IAAI;IACtB,QAAQ,GAAG,EAAE,IAAI;IACjB;IACA,QAAQ,KAAK;IACb,QAAQ,MAAM,EAAE,IAAI;IACpB,QAAQ,SAAS;IACjB,QAAQ,KAAK,EAAE,YAAY,EAAE;IAC7B;IACA,QAAQ,QAAQ,EAAE,EAAE;IACpB,QAAQ,UAAU,EAAE,EAAE;IACtB,QAAQ,aAAa,EAAE,EAAE;IACzB,QAAQ,YAAY,EAAE,EAAE;IACxB,QAAQ,OAAO,EAAE,IAAI,GAAG,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,EAAE,CAAC,OAAO,GAAG,EAAE,CAAC;IAC7E;IACA,QAAQ,SAAS,EAAE,YAAY,EAAE;IACjC,QAAQ,KAAK;IACb,KAAK,CAAC;IACN,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC;IACtB,IAAI,EAAE,CAAC,GAAG,GAAG,QAAQ;IACrB,UAAU,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,KAAK;IAChE,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACtD,YAAY,IAAI,EAAE,CAAC,GAAG,IAAI,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE;IACnE,gBAAgB,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/B,oBAAoB,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IACvC,gBAAgB,IAAI,KAAK;IACzB,oBAAoB,UAAU,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IAC7C,aAAa;IACb,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS,CAAC;IACV,UAAU,EAAE,CAAC;IACb,IAAI,EAAE,CAAC,MAAM,EAAE,CAAC;IAChB,IAAI,KAAK,GAAG,IAAI,CAAC;IACjB,IAAI,OAAO,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;IAC9B;IACA,IAAI,EAAE,CAAC,QAAQ,GAAG,eAAe,GAAG,eAAe,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IACpE,IAAI,IAAI,OAAO,CAAC,MAAM,EAAE;IACxB,QAAQ,IAAI,OAAO,CAAC,OAAO,EAAE;IAC7B,YAAY,MAAM,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACnD;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAChD,YAAY,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAClC,SAAS;IACT,aAAa;IACb;IACA,YAAY,EAAE,CAAC,QAAQ,IAAI,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;IAC3C,SAAS;IACT,QAAQ,IAAI,OAAO,CAAC,KAAK;IACzB,YAAY,aAAa,CAAC,SAAS,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;IACjD,QAAQ,eAAe,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;IACnE,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,qBAAqB,CAAC,gBAAgB,CAAC,CAAC;IAC5C,CAAC;AACD,IAoCA,MAAM,eAAe,CAAC;IACtB,IAAI,QAAQ,GAAG;IACf,QAAQ,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IACnC,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,KAAK;IACL,IAAI,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE;IACxB,QAAQ,MAAM,SAAS,IAAI,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;IACtF,QAAQ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACjC,QAAQ,OAAO,MAAM;IACrB,YAAY,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IACtD,YAAY,IAAI,KAAK,KAAK,CAAC,CAAC;IAC5B,gBAAgB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC3C,SAAS,CAAC;IACV,KAAK;IACL,IAAI,IAAI,GAAG;IACX;IACA,KAAK;IACL,CAAC;;IAED,SAAS,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;IACpC,IAAI,QAAQ,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7F,CAAC;IACD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE;IAClC,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC;IACtD,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACzB,CAAC;IACD,SAAS,UAAU,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;IAC1C,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9D,IAAI,MAAM,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;IACjC,CAAC;IACD,SAAS,UAAU,CAAC,IAAI,EAAE;IAC1B,IAAI,YAAY,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;IAC9C,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC;IACjB,CAAC;AACD,IAeA,SAAS,UAAU,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,mBAAmB,EAAE,oBAAoB,EAAE;IAC9F,IAAI,MAAM,SAAS,GAAG,OAAO,KAAK,IAAI,GAAG,CAAC,SAAS,CAAC,GAAG,OAAO,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IACvG,IAAI,IAAI,mBAAmB;IAC3B,QAAQ,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACzC,IAAI,IAAI,oBAAoB;IAC5B,QAAQ,SAAS,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IAC1C,IAAI,YAAY,CAAC,2BAA2B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IACnF,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;IAC1D,IAAI,OAAO,MAAM;IACjB,QAAQ,YAAY,CAAC,8BAA8B,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IAC1F,QAAQ,OAAO,EAAE,CAAC;IAClB,KAAK,CAAC;IACN,CAAC;IACD,SAAS,QAAQ,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE;IAC1C,IAAI,IAAI,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IACjC,IAAI,IAAI,KAAK,IAAI,IAAI;IACrB,QAAQ,YAAY,CAAC,0BAA0B,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IACtE;IACA,QAAQ,YAAY,CAAC,uBAAuB,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1E,CAAC;IACD,SAAS,QAAQ,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE;IACzC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;IAC3B,IAAI,YAAY,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC;IACpE,CAAC;AACD,IAIA,SAAS,YAAY,CAAC,IAAI,EAAE,IAAI,EAAE;IAClC,IAAI,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;IACrB,IAAI,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI;IAC/B,QAAQ,OAAO;IACf,IAAI,YAAY,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IAC3D,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IACD,SAAS,sBAAsB,CAAC,GAAG,EAAE;IACrC,IAAI,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,EAAE,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,QAAQ,IAAI,GAAG,CAAC,EAAE;IACzF,QAAQ,IAAI,GAAG,GAAG,gDAAgD,CAAC;IACnE,QAAQ,IAAI,OAAO,MAAM,KAAK,UAAU,IAAI,GAAG,IAAI,MAAM,CAAC,QAAQ,IAAI,GAAG,EAAE;IAC3E,YAAY,GAAG,IAAI,+DAA+D,CAAC;IACnF,SAAS;IACT,QAAQ,MAAM,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7B,KAAK;IACL,CAAC;IACD,SAAS,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAC1C,IAAI,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;IAC9C,QAAQ,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IACtC,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,+BAA+B,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACjF,SAAS;IACT,KAAK;IACL,CAAC;IACD,MAAM,kBAAkB,SAAS,eAAe,CAAC;IACjD,IAAI,WAAW,CAAC,OAAO,EAAE;IACzB,QAAQ,IAAI,CAAC,OAAO,KAAK,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;IAChE,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,6BAA6B,CAAC,CAAC,CAAC;IAC7D,SAAS;IACT,QAAQ,KAAK,EAAE,CAAC;IAChB,KAAK;IACL,IAAI,QAAQ,GAAG;IACf,QAAQ,KAAK,CAAC,QAAQ,EAAE,CAAC;IACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,MAAM;IAC9B,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,+BAA+B,CAAC,CAAC,CAAC;IAC5D,SAAS,CAAC;IACV,KAAK;IACL,IAAI,cAAc,GAAG,GAAG;IACxB,IAAI,aAAa,GAAG,GAAG;IACvB,CAAC;;IC9kDD;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,MAAM,SAAS,CAAC;IACvB;IACA;IACA;IACA;IACA,EAAE,WAAW,CAAC,MAAM,EAAE;IACtB,IAAI,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;IACtB,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,IAAI,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,IAAI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IACtB,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACrB,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,IAAI,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IAC3B,IAAI,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;IAC7B,IAAI,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC3B,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9B,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,GAAG;;IAEH;IACA;IACA;IACA;IACA,EAAE,MAAM,CAAC,KAAK,EAAE;IAChB,IAAI,IAAI,CAAC,SAAS,GAAG,WAAW,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;IAChF,IAAI,IAAI,CAAC,OAAO,GAAG,SAAS,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;IACxE,IAAI,IAAI,CAAC,MAAM,GAAG,QAAQ,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;IACpE,IAAI,IAAI,CAAC,QAAQ,GAAG,UAAU,IAAI,KAAK,GAAG,KAAK,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC5E,IAAI,IAAI,CAAC,YAAY,GAAG,OAAO,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;IAC9E,IAAI,IAAI,CAAC,cAAc;IACvB,MAAM,WAAW,IAAI,KAAK,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;IACtE,IAAI,IAAI,CAAC,aAAa;IACtB,MAAM,gBAAgB,IAAI,KAAK,GAAG,KAAK,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;IAC/E,IAAI,IAAI,CAAC,aAAa;IACtB,MAAM,gBAAgB,IAAI,KAAK,GAAG,KAAK,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;IAC/E,IAAI,IAAI,CAAC,WAAW;IACpB,MAAM,cAAc,IAAI,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;IACzE,IAAI,IAAI,CAAC,WAAW;IACpB,MAAM,cAAc,IAAI,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;IACzE,IAAI,IAAI,CAAC,WAAW;IACpB,MAAM,cAAc,IAAI,KAAK,GAAG,KAAK,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;;IAEzE;IACA;IACA,IAAI,IAAI,CAAC,WAAW,GAAG,SAAS,IAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;IAChF,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE;IACrC,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpD,KAAK;;IAEL;IACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,GAAG;;IAEH;IACA;IACA;IACA;IACA;IACA;IACA,EAAE,UAAU,CAAC,GAAG,EAAE;IAClB,IAAI,IAAI,EAAE,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;IACjC,MAAM,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,iBAAiB,CAAC,CAAC;IAC/C,KAAK;;IAEL,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC9B,GAAG;;IAEH;IACA;IACA;IACA;IACA,EAAE,SAAS,GAAG;IACd,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAChD,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;IACxD,IAAI,MAAM,UAAU,GAAG,WAAW,GAAG,OAAO,CAAC;IAC7C,IAAI,OAAO,UAAU,GAAG,CAAC,CAAC;IAC1B,GAAG;;IAEH;IACA;IACA;IACA;IACA,EAAE,MAAM,GAAG;IACX,IAAI,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IAChD,IAAI,OAAO,OAAO,GAAG,CAAC,CAAC;IACvB,GAAG;IACH,CAAC;;IAED;IACA;IACA;IACA;AACA,IAAO,MAAM,QAAQ,CAAC;IACtB;IACA;IACA;IACA;IACA;IACA,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,GAAG,IAAI,EAAE;IAC1C,IAAI,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;IAChC,IAAI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC9B,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC3B,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACjC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,GAAG;;IAEH;IACA;IACA;IACA,EAAE,MAAM,KAAK,GAAG;IAChB,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC;;IAEtB,IAAI,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,EAAE;IAChC,MAAM,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC,MAAM;IACzC,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;IACrB,OAAO,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;;IAEhC,MAAM,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC;IAC1B,KAAK;IACL,GAAG;;IAEH;IACA;IACA;IACA,EAAE,IAAI,GAAG;IACT,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;IAChC,MAAM,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACpC,MAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC5B,KAAK;IACL,GAAG;;IAEH;IACA;IACA;IACA;IACA,EAAE,MAAM,KAAK,GAAG;IAChB;IACA,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;IACxB,MAAM,OAAO;IACb,KAAK;;IAEL,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC;;IAEtB;IACA;IACA,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;IACpD,IAAI,MAAM,WAAW,GAAG,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC,CAAC;;IAEvD,IAAI,OAAO,KAAK,CAAC,CAAC,aAAa,EAAE,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;IACxE,OAAO,IAAI,CAAC,QAAQ,IAAI;IACxB,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC/B,QAAQ,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,EAAE;IACpC,UAAU,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IACjC,SAAS,MAAM;IACf,UAAU,MAAM,QAAQ,CAAC,UAAU,CAAC;IACpC,SAAS;IACT,OAAO,CAAC;IACR,OAAO,IAAI,CAAC,IAAI,IAAI;IACpB;IACA;IACA,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,cAAc,CAAC,EAAE;IACxD,UAAU,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;IAE/C,UAAU,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE;IACtC,YAAY,IAAI,CAAC,SAAS,EAAE,CAAC;IAC7B,WAAW;IACX,SAAS;IACT,OAAO,CAAC;IACR,OAAO,KAAK,CAAC,MAAM;IACnB,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IAC/B,OAAO,CAAC,CAAC;IACT,GAAG;IACH,CAAC;;;;;;;;;;;;;;;6CClE2B,MAAM,iBAAC,GAAW,uBAAE,GAAa;oEAChD,GAAa;;oDAJT,GAAQ,uBAAI,GAAW,oBAAI,GAAQ;sDACpC,GAAW,qBAAK,GAAQ,yBAAI,GAAa;qDACvC,GAAQ,wBAAK,GAAW,qBAAK,GAAQ,yBAAI,GAAa;;;;;;;;;;mEAH1D,GAAc;;;;;;8CAIA,MAAM,iBAAC,GAAW,uBAAE,GAAa;;;iHAChD,GAAa;;;;;qDAJT,GAAQ,uBAAI,GAAW,oBAAI,GAAQ;;;;uDACpC,GAAW,qBAAK,GAAQ,yBAAI,GAAa;;;;sDACvC,GAAQ,wBAAK,GAAW,qBAAK,GAAQ,yBAAI,GAAa;;;;;;;;;;;;;;;;;;;;;;;aA5D7D,MAAM,CAAC,KAAK,EAAE,OAAO;oBACb,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,OAAO;;;;WA9EzD,QAAQ,GAAG,qBAAqB;;;WAGhC,gBAAgB,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG;;WACjC,iBAAiB,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;WAChC,gBAAgB,KACnB,CAAC,EAAE,CAAC,EAAE,CAAC,IACP,CAAC,EAAE,GAAG,EAAE,GAAG,IACX,GAAG,EAAE,EAAE,EAAE,EAAE,IACX,EAAE,EAAE,GAAG,EAAE,EAAE,IACX,GAAG,EAAE,GAAG,EAAE,CAAC;WAIH,CAAC;WACD,CAAC;WAGD,KAAK,IAAI,CAAC;WAGV,SAAS;WAGT,KAAK,GAAG,CAAC;WAIT,QAAQ,GAAG,CAAC;WAGZ,QAAQ,GAAG,KAAK;WAGhB,SAAS,GAAG,IAAI;WAGhB,WAAW,GAAG,KAAK;WAGnB,QAAQ,GAAG,KAAK;;;SAGvB,WAAW,GAAG,gBAAgB;;SAC9B,aAAa,GAAG,CAAC;;;;;;;cAuBZ,cAAc;MACrB,QAAQ,CAAC,UAAU,IAAO,CAAC,EAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAvBnC,CAAC;YACK,QAAQ,IAAI,WAAW;yBACzB,WAAW,GAAG,iBAAiB;yBAC/B,aAAa,GAAG,CAAC;mBACR,CAAC,IAAI,KAAK;yBACnB,WAAW,GAAG,gBAAgB,CAAC,KAAK;;yBACpC,aAAa,GACX,CAAC,GAAG,KAAK,IAAI,KAAK,GAAG,QAAQ;WAAI,IAAI,GAAG,QAAQ,GAAI,KAAK;WAAG,CAAC;;yBAE/D,WAAW,GAAG,gBAAgB;yBAC9B,aAAa,GAAG,CAAC;;;;;;;OAKrB,CAAC,kBAAE,aAAa,GAAG,SAAS,IAAI,KAAK,GAAG,QAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IChElD;IACA;IACA;;IAEA;IACA;IACA;AACA,IAAO,SAAS,kBAAkB,GAAG;IACrC;IACA,EAAE,MAAM,CAAC,gBAAgB;IACzB,IAAI,YAAY;IAChB,IAAI,SAAS,YAAY,GAAG;IAC5B,MAAM,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC;;IAErC;IACA,MAAM,MAAM,CAAC,mBAAmB,CAAC,YAAY,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;IACpE,KAAK;IACL,IAAI,KAAK;IACT,GAAG,CAAC;IACJ,CAAC;;IAED;IACA;IACA;IACA;AACA,IAAO,SAAS,UAAU,GAAG;IAC7B,EAAE,OAAO,IAAI,IAAI,MAAM,CAAC,gBAAgB,CAAC;IACzC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBCoFW,GAAK,UAAC,GAAC,YAAE,GAAC;;+BACJ,GAAS,aAAI,GAAC,sBAAI,GAAS,aAAI,GAAC;;;iBAChC,UAAU,eAAC,GAAS,WAAE,GAAC,YAAE,GAAC;;;kCACvB,GAAS,aAAI,GAAC,sBAAI,GAAS,aAAI,GAAC,wBAAI,GAAW;;;;;;;;;;;iDAC/C,GAAkB;;;;;;;;;;;;;;;;4DAJ3B,GAAK,UAAC,GAAC,YAAE,GAAC;;kCACJ,GAAS,aAAI,GAAC,sBAAI,GAAS,aAAI,GAAC;;;oBAChC,UAAU,eAAC,GAAS,WAAE,GAAC,YAAE,GAAC;;;qCACvB,GAAS,aAAI,GAAC,sBAAI,GAAS,aAAI,GAAC,wBAAI,GAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BARvD,MAAM,YAAE,GAAK;;;;sCAApB,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yBAAG,MAAM,YAAE,GAAK;;;;qCAApB,MAAI;;;;;;;;;;;;;;;;8BAAJ,MAAI;;;;;;;;;;wCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBADC,MAAM,aAAE,GAAM;;;;oCAArB,MAAI;;;;;;;;;;;;;;;;;sDAFkC,GAAc;;;;;;;;;;;;;;;;;uBAE7C,MAAM,aAAE,GAAM;;;;mCAArB,MAAI;;;;;;;;;;;;;;;;4BAAJ,MAAI;;;;;;;;uDAFkC,GAAc;;;;;;sCAEpD,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aAnBU,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC;cAC3B,IAAI,IAAI,KAAK;UAChB,CAAC,IAAI,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC;cACtB,IAAI;;;;YAIR,KAAK;;;;WAzFR,QAAQ,GAAG,qBAAqB;WAM3B,aAAa,GAAG,CAAC;WAGjB,KAAK,GAAG,CAAC;WACT,MAAM,GAAG,CAAC;WAIV,KAAK;WAGL,SAAS,GAAG,IAAI;WAIhB,WAAW;;cA4BN,kBAAkB,CAAC,KAAK;YAChC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YACvB,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;;;;WAIxB,SAAS;;;;;;;;WAQT,UAAU,MAAO,SAAS,IAAI,MAAM,IAAI,SAAS,IAAI,MAAM;uBAC9D,WAAW,GAAG,IAAI;uBAClB,SAAS,GAAG,KAAK;uBACjB,SAAS,GAAG,MAAM;uBAClB,SAAS,GAAG,MAAM;OAClB,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM;;uBAEvC,SAAS,GAAG,MAAM;uBAClB,SAAS,GAAG,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OA/CtB,CAAC,kBAAE,SAAS,GAAG,aAAa,IAAI,CAAC,IAAI,CAAC;;;;OACtC,CAAC,kBAAE,SAAS,GAAG,aAAa,IAAI,CAAC,IAAI,CAAC;;;;;OAGtC,CAAC,kBAAE,WAAW,GAAG,aAAa,GAAG,KAAK,GAAG,KAAK;;;;;;OAI9C,CAAC,kBAAE,SAAS,GAAG,WAAW,CAAC,MAAM,GAAG,CAAC,GAAG,WAAW,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC;;;;;;OAI/D,CAAC,mBAAE,cAAc,GAAG,KAAK,GAAG,EAAE,GAAG,EAAE;;;;OACnC,CAAC;cACO,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU;;YAC/C,CAAC,GAAG,KAAK,IAAI,cAAc,GAAG,MAAM,CAAC,KAAK;SAC5C,QAAQ,CAAC,YAAY,CAAC,SAAS,WAAW,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCC0DlD,GAAU;;;+BACV,GAAS;;;gCACT,GAAU;;;;;;;;;;;;;;;;qEAFV,GAAU;oEACV,GAAS;qEACT,GAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+BAdf,GAAK;;;kBAOH,GAAG;;;;;;;;;;;;;;gFADkB,GAAK;;;6CAAwC,GAAG;;;;;;;;;;;;;;;;qBANvE,GAAK;;;;;;;;;;;;;;;;;;;;;;;yGAMkB,GAAK;;;;;;;;;;;;;8CAAwC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;WA5FjE,GAAG,GAAG,KAAK;WAGX,KAAK,GAAG,CAAC;WAGT,QAAQ,GAAG,KAAK;WAGhB,MAAM,GAAG,KAAK;WAMd,UAAU,GAAG,CAAC;WACd,UAAU,GAAG,CAAC;WACd,SAAS,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OALxB,CAAC,kBAAE,KAAK,GAAG,QAAQ,IAAI,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBC8CpB,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBAWK,GAAC;;;eAAqB,QAAQ,OAAC,GAAC,gBAAE,GAAM;;gBAAO,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;kBAA9B,QAAQ,OAAC,GAAC,gBAAE,GAAM;;6DAAO,GAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iCAbjE,GAAQ;uCAWC,IAAI;iCACT,GAAM;;;;oCAAX,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wBAZH,GAAQ;;;;;;;;;;;;;;gCAYJ,GAAM;;;;mCAAX,MAAI;;;;;;;;;;;;;;;;4BAAJ,MAAI;;;;;;;;;;;sCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aA/CC,QAAQ,CAAC,KAAK,EAAE,MAAM;SACzB,MAAM,GAAG,IAAI;WACX,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE,YAAY;;cAE/B,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC;UAC9B,CAAC,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC,EAAE,YAAY,KAAK,KAAK;OAChD,MAAM,GAAG,KAAK;;;;;YAKX,MAAM;;;;WA9BJ,QAAQ,GAAG,KAAK;WAIhB,MAAM;WAIN,OAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAGlB,CAAC,kBAAE,IAAI,GAAG,QAAQ,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BCgDd,GAAQ;;;;;;;;;;;;;;;;;4CADH,WAAW;;;;;iEAChB,GAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;uBAN7B,GAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aA5CJ,WAAW;;WAEZ,QAAQ,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW;;WAE9C,KAAK,GAAG,QAAQ,CAAC,WAAW;KAClC,KAAK,CAAC,kBAAkB,CAAC,QAAQ;WAE3B,SAAS,GAAG,MAAM,CAAC,YAAY;KACrC,SAAS,CAAC,eAAe;KACzB,SAAS,CAAC,QAAQ,CAAC,KAAK;;;KAGxB,QAAQ,CAAC,WAAW,CAAC,MAAM;;;;WAvBlB,MAAM,GAAG,CAAC;WAGV,QAAQ,GAAG,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAG3B,CAAC,kBAAE,QAAQ,MAAM,MAAM,CAAC,QAAQ,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,SAAS,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BC+D5E,GAAa,OAAI,CAAC;;;;;;;gDAOF,GAAe;;;;8BAG1B,GAAS,IAAC,UAAU,CAAC,aAAa;6BACnC,GAAS,IAAC,UAAU,CAAC,aAAa;mCAC5B,GAAS,IAAC,WAAW;;;;;;;;sCAIzB,GAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;yEANX,GAAS,IAAC,UAAU,CAAC,aAAa;wEACnC,GAAS,IAAC,UAAU,CAAC,aAAa;8EAC5B,GAAS,IAAC,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BARP,GAAS,IAAC,MAAM;;;;;;;;;;;;;;;;0EAAhB,GAAS,IAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAHtB,GAAS,IAAC,MAAM;gCAAY,GAAS,IAAC,SAAS;;;;;;;;;;;;;;;+EAA/C,GAAS,IAAC,MAAM;iFAAY,GAAS,IAAC,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAJnE,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA5DI,MAAM,GAAG,CAAC;;;SAGjB,SAAS,OAAO,SAAS,CAAC,MAAM;;;;WAsB9B,QAAQ,OAAO,QAAQ,CAAC,SAAS;;;;;;;KAKvC,QAAQ,CAAC,KAAK;;;;;;;cAOL,UAAU,CAAC,KAAK;YACjB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YACtB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;sBAC5B,SAAS,GAAG,KAAK;MACjB,KAAK,iBAAiB,MAAM,SAAS,KAAK,IAAI,KAAK;;;;;;;;cAQ5C,eAAe,CAAC,KAAK;UACxB,KAAK,CAAC,MAAM,CAAC,OAAO;uBACtB,SAAS,GAAG,KAAK;uBACjB,KAAK,GAAG,SAAS,CAAC,cAAc;;uBAEhC,SAAS,GAAG,IAAI;uBAChB,KAAK,GAAG,SAAS,CAAC,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAhDlC,CAAC,kBAAE,IAAI,GAAG,SAAS,CAAC,IAAI;;;;;;OAIxB,CAAC,kBAAE,QAAQ,GAAG,SAAS,CAAC,SAAS;;;;;OAGjC,CAAC,kBAAE,aAAa,GAAG,SAAS,CAAC,aAAa;;;;;OAG1C,CAAC,kBAAE,SAAS,IAAI,QAAQ,IAAI,SAAS,CAAC,WAAW,GAAG,CAAC;;;;;;OAIrD,CAAC,kBAAE,KAAK,GAAG,SAAS,CAAC,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC/BnC;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;AACA,IAAO,eAAe,UAAU,CAAC,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE;IACnE;IACA,EAAE,MAAM,OAAO,GAAG;IAClB,IAAI,MAAM,EAAE,MAAM;IAClB,IAAI,OAAO,EAAE;IACb,MAAM,cAAc,EAAE,kBAAkB;IACxC,KAAK;IACL,IAAI,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;IACzB,MAAM,YAAY,EAAE,WAAW;IAC/B,MAAM,QAAQ,EAAE,OAAO;IACvB,MAAM,WAAW,EAAE,UAAU;IAC7B,KAAK,CAAC;IACN,GAAG,CAAC;;IAEJ;IACA,EAAE,OAAO,KAAK,CAAC,CAAC,gBAAgB,CAAC,EAAE,OAAO,CAAC;IAC3C,KAAK,IAAI,CAAC,QAAQ,IAAI;IACtB,MAAM,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,EAAE;IAClC,QAAQ,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC/B,OAAO,MAAM;IACb,QAAQ,MAAM,QAAQ,CAAC,UAAU,CAAC;IAClC,OAAO;IACP,KAAK,CAAC;IACN,KAAK,IAAI,CAAC,IAAI,IAAI;IAClB;IACA,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC;IAC7C,MAAM,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;IAChD,KAAK,CAAC;IACN,KAAK,KAAK,CAAC,MAAM;IACjB,MAAM,OAAO;IACb,KAAK,CAAC,CAAC;IACP,CAAC;;;;;;;;;;;;;;mCC6EY,GAAU,IAAC,CAAC;;;;;;;;;;;;;+EAFD,GAAU,IAAC,CAAC;yEADU,GAAU,sBAAI,GAAU,IAAC,CAAC;;;;;;;;;qEAEhD,GAAgB;;;;;;0EAFM,GAAU,sBAAI,GAAU,IAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uCAHzD,GAAY;;;;oCAAjB,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mDAP4C,GAAM;uDAqBJ,GAAU;;;;;;;;sCAdvD,GAAY;;;;mCAAjB,MAAI;;;;;;;;;;;;;;;;wCAAJ,MAAI;;;;;;;;;;;;;;;;;;;;;;;;;WA3GN,YAAY,KAAK,MAAM,EAAE,CAAC,IAAI,QAAQ,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC;;;SAGxD,WAAW,GAAG,CAAC;;;SAGf,OAAO,GAAG,CAAC;;;SAGX,UAAU,GAAG,CAAC;;;;;cAKT,MAAM;MACb,OAAO,GAAG,CAAC;MACX,UAAU,CAAC,WAAW,EAAE,OAAO,EAAE,UAAU;;;;;;cAMpC,UAAU;MACjB,UAAU,CAAC,WAAW,EAAE,OAAO,EAAE,UAAU;;;;;;;cAOpC,gBAAgB,CAAC,KAAK;sBAC7B,UAAU,GAAG,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,YAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}